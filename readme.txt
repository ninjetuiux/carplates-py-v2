# מערכת זיהוי וטיוב לוחיות רישוי

## סקירה כללית
המערכת מיועדת לזיהוי ותיקון שגיאות בקריאת לוחיות רישוי ממצלמות תנועה. המערכת מטפלת בשגיאות נפוצות כגון:
- החלפת ספרות דומות (למשל 3 ו-8)
- תווים חסרים
- תווים שגויים

## ארכיטקטורה
המערכת מורכבת ממספר רכיבים עיקריים:
1. **מחולל נתונים**: יוצר נתוני בדיקה מדומים
2. **בסיס נתונים**: שומר את הנתונים ותוצאות הניתוח
3. **מנוע השוואה**: מזהה לוחיות דומות
4. **מערכת תיקונים**: מציעה תיקונים ומדרגת את רמת הביטחון

## תהליך העבודה
1. יצירת קובץ CSV עם נתוני לוחיות רישוי מדומים
2. טעינת הנתונים לבסיס נתונים SQLite
3. הרצת אלגוריתם זיהוי שגיאות
4. שמירת התיקונים המוצעים בטבלה נפרדת

## טבלאות בסיס הנתונים

### license_plates
- id (PRIMARY KEY)
- DateTime (זמן הזיהוי)
- LicensePlate (מספר הלוחית שזוהה)

### corrected_plates
- id (PRIMARY KEY)
- original_id (קישור ללוחית המקורית)
- timestamp (זמן התיקון)
- original_plate (לוחית מקורית)
- corrected_plate (לוחית מתוקנת)
- confidence_score (ציון ביטחון)
- correction_type (סוג התיקון)

## פרמטרים מתכווננים
- **time_window_minutes**: טווח הזמן לחיפוש לוחיות דומות (ברירת מחדל: 5 דקות)
- **similarity_threshold**: סף דמיון מינימלי (ברירת מחדל: 70%)

## דוחות
המערכת מייצרת שני סוגי דוחות:
1. **דוח שגיאות**: מציג את כל הלוחיות החשודות כשגויות
2. **דוח תיקונים**: מציג את התיקונים המוצעים וציוני הביטחון

## שימוש
python
יצירת נתוני בדיקה
create_csv('license_plates.csv', num_records=100)
יצירת והכנת בסיס הנתונים
create_table()
load_csv_to_db('license_plates.csv')
מציאת וטיפול בשגיאות
errors = find_license_plate_errors(
time_window_minutes=5,
similarity_threshold=70
)
עדכון התיקונים
if errors:
update_license_plates_with_scores(errors)

